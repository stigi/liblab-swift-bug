{
  "openapi": "3.1.0",
  "info": {
    "title": "MagicBell API",
    "description": "OpenAPI 3.1.0 Specification for MagicBell API.",
    "contact": {
      "name": "MagicBell",
      "url": "https://magicbell.com",
      "email": "hello@magicbell.com"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://api.magicbell.com/v2",
      "description": "MagicBell REST API Base URL"
    }
  ],
  "tags": [
    {
      "name": "channels"
    },
    {
      "name": "integrations"
    },
    {
      "name": "broadcasts"
    },
    {
      "name": "events"
    },
    {
      "name": "jwt"
    }
  ],
  "paths": {
    "/broadcasts": {
      "get": {
        "tags": [
          "broadcasts"
        ],
        "description": "Retrieves a paginated list of broadcasts for the project. Returns basic information about each broadcast including its creation time and status.",
        "operationId": "list_broadcasts",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfBroadcasts"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "broadcasts"
        ],
        "description": "Creates a new broadcast message. When a broadcast is created, it generates individual notifications for relevant users within the project. Only administrators can create broadcasts.",
        "operationId": "create_broadcast",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Broadcast"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Broadcast"
                }
              }
            }
          }
        }
      }
    },
    "/broadcasts/{broadcast_id}": {
      "get": {
        "tags": [
          "broadcasts"
        ],
        "description": "Retrieves detailed information about a specific broadcast by its ID. Includes the broadcast's configuration and current status.",
        "operationId": "fetch_broadcast",
        "parameters": [
          {
            "name": "broadcast_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Broadcast"
                }
              }
            }
          }
        }
      }
    },
    "/channels/deliveryconfig": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Dummy",
        "operationId": "get_project_deliveryconfig",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDeliveryConfig"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "channels"
        ],
        "description": "Dummy",
        "operationId": "save_project_deliveryconfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDeliveryConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDeliveryConfig"
                }
              }
            }
          }
        }
      }
    },
    "/channels/deliveryconfig/categories": {
      "post": {
        "tags": [
          "channels"
        ],
        "description": "Dummy",
        "operationId": "save_categories_deliveryconfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDeliveryConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDeliveryConfig"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "events"
        ],
        "description": "Retrieves a paginated list of events for the project.",
        "operationId": "get_events",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfEvents"
                }
              }
            }
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "List Integrations",
        "description": "Lists all available and configured integrations for the project. Returns a summary of each integration including its type, status, and basic configuration information.",
        "operationId": "list_integrations",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfIntegrationObjects"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/apns": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a apns integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_apns_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current apns integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_apns_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfAPNSConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a apns integration for the project. Only administrators can configure integrations.",
        "operationId": "save_apns_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APNSConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APNSConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/apns/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific apns integration instance by ID from the project.",
        "operationId": "delete_apns_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/awssns": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a awssns integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_awssns_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current awssns integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_awssns_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfAWSSNSConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a awssns integration for the project. Only administrators can configure integrations.",
        "operationId": "save_awssns_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSSNSConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSSNSConfig"
                }
              }
            }
          }
        },
        "x-forbid-unknown-cookie": true,
        "x-forbid-unknown-header": true,
        "x-forbid-unknown-path": true,
        "x-forbid-unknown-query": true
      }
    },
    "/integrations/awssns/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific awssns integration instance by ID from the project.",
        "operationId": "delete_awssns_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/expo": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a expo integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_expo_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current expo integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_expo_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfExpoConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a expo integration for the project. Only administrators can configure integrations.",
        "operationId": "save_expo_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpoConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpoConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/expo/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific expo integration instance by ID from the project.",
        "operationId": "delete_expo_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/fcm": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a fcm integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_fcm_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current fcm integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_fcm_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfFCMConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a fcm integration for the project. Only administrators can configure integrations.",
        "operationId": "save_fcm_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FCMConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FCMConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/fcm/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific fcm integration instance by ID from the project.",
        "operationId": "delete_fcm_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/github": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a github integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_github_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current github integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_github_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfGithubConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a github integration for the project. Only administrators can configure integrations.",
        "operationId": "save_github_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GithubConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubConfig"
                }
              }
            }
          }
        },
        "x-forbid-unknown-cookie": true,
        "x-forbid-unknown-header": true,
        "x-forbid-unknown-path": true,
        "x-forbid-unknown-query": true
      }
    },
    "/integrations/github/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific github integration instance by ID from the project.",
        "operationId": "delete_github_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/inbox": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a inbox integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_inbox_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current inbox integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_inbox_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfInboxConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a inbox integration for the project. Only administrators can configure integrations.",
        "operationId": "save_inbox_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboxConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/inbox/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific inbox integration instance by ID from the project.",
        "operationId": "delete_inbox_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/mailgun": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a mailgun integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_mailgun_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current mailgun integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_mailgun_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMailgunConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a mailgun integration for the project. Only administrators can configure integrations.",
        "operationId": "save_mailgun_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailgunConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailgunConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/mailgun/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific mailgun integration instance by ID from the project.",
        "operationId": "delete_mailgun_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/ping_email": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a ping_email integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_ping_email_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current ping_email integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_ping_email_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfPingConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a ping_email integration for the project. Only administrators can configure integrations.",
        "operationId": "save_ping_email_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PingConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/ping_email/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific ping_email integration instance by ID from the project.",
        "operationId": "delete_ping_email_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/sendgrid": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a sendgrid integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_sendgrid_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current sendgrid integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_sendgrid_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfSendgridConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a sendgrid integration for the project. Only administrators can configure integrations.",
        "operationId": "save_sendgrid_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendgridConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendgridConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/sendgrid/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific sendgrid integration instance by ID from the project.",
        "operationId": "delete_sendgrid_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/ses": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a ses integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_ses_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current ses integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_ses_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfSESConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a ses integration for the project. Only administrators can configure integrations.",
        "operationId": "save_ses_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SESConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SESConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/ses/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific ses integration instance by ID from the project.",
        "operationId": "delete_ses_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/slack": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a slack integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_slack_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current slack integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_slack_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfSlackConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a slack integration for the project. Only administrators can configure integrations.",
        "operationId": "save_slack_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlackConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/slack/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific slack integration instance by ID from the project.",
        "operationId": "delete_slack_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/stripe": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a stripe integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_stripe_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current stripe integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_stripe_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfStripeConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a stripe integration for the project. Only administrators can configure integrations.",
        "operationId": "save_stripe_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfig"
                }
              }
            }
          }
        },
        "x-forbid-unknown-cookie": true,
        "x-forbid-unknown-header": true,
        "x-forbid-unknown-path": true,
        "x-forbid-unknown-query": true
      }
    },
    "/integrations/stripe/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific stripe integration instance by ID from the project.",
        "operationId": "delete_stripe_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/templates": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a templates integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_templates_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current templates integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_templates_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfTemplatesConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a templates integration for the project. Only administrators can configure integrations.",
        "operationId": "save_templates_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/templates/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific templates integration instance by ID from the project.",
        "operationId": "delete_templates_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/twilio": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a twilio integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_twilio_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current twilio integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_twilio_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfTwilioConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a twilio integration for the project. Only administrators can configure integrations.",
        "operationId": "save_twilio_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwilioConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwilioConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/twilio/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific twilio integration instance by ID from the project.",
        "operationId": "delete_twilio_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integrations/web_push": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a web_push integration configuration from the project. This will disable the integration's functionality within the project.",
        "operationId": "delete_web_push_integration",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "integrations"
        ],
        "description": "Retrieves the current web_push integration configurations for a specific integration type in the project. Returns configuration details and status information.",
        "operationId": "get_web_push_integration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfWebpushConfigObjects"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "integrations"
        ],
        "description": "Creates or updates a web_push integration for the project. Only administrators can configure integrations.",
        "operationId": "save_web_push_integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebpushConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebpushConfig"
                }
              }
            }
          }
        }
      }
    },
    "/integrations/web_push/{id}": {
      "delete": {
        "tags": [
          "integrations"
        ],
        "description": "Removes a specific web_push integration instance by ID from the project.",
        "operationId": "delete_web_push_integration_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/jwt/project": {
      "get": {
        "tags": [
          "jwt"
        ],
        "description": "Retrieves a list of all active project-level JWT tokens. Returns a paginated list showing token metadata including creation date, last used date, and expiration time. For security reasons, the actual token values are not included in the response.",
        "operationId": "fetch_project_tokens",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfFetchTokensResponseTokens"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "jwt"
        ],
        "description": "Creates a new project-level JWT token. These tokens provide project-wide access and should be carefully managed. Only administrators can create project tokens. The returned token should be securely stored as it cannot be retrieved again after creation.",
        "operationId": "create_project_jwt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          }
        }
      }
    },
    "/jwt/project/{token_id}": {
      "delete": {
        "tags": [
          "jwt"
        ],
        "description": "Immediately revokes a project-level JWT token. Once revoked, any requests using this token will be rejected. This action is immediate and cannot be undone. Active sessions using this token will be terminated.",
        "operationId": "discard_project_jwt",
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/jwt/user": {
      "post": {
        "tags": [
          "jwt"
        ],
        "description": "Issues a new user-specific JWT token. These tokens are scoped to individual user permissions and access levels. Only administrators can create user tokens. The token is returned only once at creation time and cannot be retrieved later.",
        "operationId": "create_user_jwt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          }
        }
      }
    },
    "/jwt/user/{user_id}": {
      "get": {
        "tags": [
          "jwt"
        ],
        "description": "Lists all JWT tokens associated with a specific user. Returns token metadata including creation time, last access time, and expiration date. Administrators can use this to audit user token usage and manage active sessions. Token values are not included in the response for security reasons.",
        "operationId": "fetch_user_tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfFetchTokensResponseTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Lists all mobile_push tokens associated with a specific user. This endpoint is available to project administrators and returns a paginated list of tokens, including both active and revoked tokens.",
        "operationId": "get_mobile_push_apns_user-tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMetadataAPNSTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens/{token_id}": {
      "delete": {
        "tags": [
          "channels"
        ],
        "description": "Revokes a specific user's mobile_push token. This endpoint is available to project administrators and permanently invalidates the specified token. Once revoked, the token can no longer be used to access channel features. This action cannot be undone.",
        "operationId": "discard_mobile_push_apns_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Retrieves a specific mobile_push token by its ID for a given user. This endpoint is available to project administrators and requires project-level authentication. Use this to inspect token details including its status, creation date, and associated metadata.",
        "operationId": "get_mobile_push_apns_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataAPNSToken"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Lists all mobile_push tokens associated with a specific user. This endpoint is available to project administrators and returns a paginated list of tokens, including both active and revoked tokens.",
        "operationId": "get_mobile_push_expo_user-tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMetadataExpoTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens/{token_id}": {
      "delete": {
        "tags": [
          "channels"
        ],
        "description": "Revokes a specific user's mobile_push token. This endpoint is available to project administrators and permanently invalidates the specified token. Once revoked, the token can no longer be used to access channel features. This action cannot be undone.",
        "operationId": "discard_mobile_push_expo_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Retrieves a specific mobile_push token by its ID for a given user. This endpoint is available to project administrators and requires project-level authentication. Use this to inspect token details including its status, creation date, and associated metadata.",
        "operationId": "get_mobile_push_expo_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataExpoToken"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Lists all mobile_push tokens associated with a specific user. This endpoint is available to project administrators and returns a paginated list of tokens, including both active and revoked tokens.",
        "operationId": "get_mobile_push_fcm_user-tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMetadataFCMTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens/{token_id}": {
      "delete": {
        "tags": [
          "channels"
        ],
        "description": "Revokes a specific user's mobile_push token. This endpoint is available to project administrators and permanently invalidates the specified token. Once revoked, the token can no longer be used to access channel features. This action cannot be undone.",
        "operationId": "discard_mobile_push_fcm_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Retrieves a specific mobile_push token by its ID for a given user. This endpoint is available to project administrators and requires project-level authentication. Use this to inspect token details including its status, creation date, and associated metadata.",
        "operationId": "get_mobile_push_fcm_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataFCMToken"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/slack/tokens": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Lists all slack tokens associated with a specific user. This endpoint is available to project administrators and returns a paginated list of tokens, including both active and revoked tokens.",
        "operationId": "get_slack_user-tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMetadataSlackTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/slack/tokens/{token_id}": {
      "delete": {
        "tags": [
          "channels"
        ],
        "description": "Revokes a specific user's slack token. This endpoint is available to project administrators and permanently invalidates the specified token. Once revoked, the token can no longer be used to access channel features. This action cannot be undone.",
        "operationId": "discard_slack_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Retrieves a specific slack token by its ID for a given user. This endpoint is available to project administrators and requires project-level authentication. Use this to inspect token details including its status, creation date, and associated metadata.",
        "operationId": "get_slack_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataSlackToken"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/teams/tokens": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Lists all teams tokens associated with a specific user. This endpoint is available to project administrators and returns a paginated list of tokens, including both active and revoked tokens.",
        "operationId": "get_teams_user-tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMetadataTeamsTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/teams/tokens/{token_id}": {
      "delete": {
        "tags": [
          "channels"
        ],
        "description": "Revokes a specific user's teams token. This endpoint is available to project administrators and permanently invalidates the specified token. Once revoked, the token can no longer be used to access channel features. This action cannot be undone.",
        "operationId": "discard_teams_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Retrieves a specific teams token by its ID for a given user. This endpoint is available to project administrators and requires project-level authentication. Use this to inspect token details including its status, creation date, and associated metadata.",
        "operationId": "get_teams_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTeamsToken"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/web_push/tokens": {
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Lists all web_push tokens associated with a specific user. This endpoint is available to project administrators and returns a paginated list of tokens, including both active and revoked tokens.",
        "operationId": "get_web_push_user-tokens",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfMetadataWebPushTokens"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/channels/web_push/tokens/{token_id}": {
      "delete": {
        "tags": [
          "channels"
        ],
        "description": "Revokes a specific user's web_push token. This endpoint is available to project administrators and permanently invalidates the specified token. Once revoked, the token can no longer be used to access channel features. This action cannot be undone.",
        "operationId": "discard_web_push_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscardResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "channels"
        ],
        "description": "Retrieves a specific web_push token by its ID for a given user. This endpoint is available to project administrators and requires project-level authentication. Use this to inspect token details including its status, creation date, and associated metadata.",
        "operationId": "get_web_push_user-token",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataWebPushToken"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APNSConfig": {
        "required": [
          "app_id",
          "certificate",
          "key_id",
          "team_id",
          "badge"
        ],
        "type": "object",
        "properties": {
          "app_id": {
            "pattern": "^[a-zA-Z0-9]+(.[a-zA-Z0-9]+)*$",
            "type": "string"
          },
          "badge": {
            "enum": [
              "unread",
              "unseen"
            ],
            "type": "string"
          },
          "certificate": {
            "pattern": "^-+?\\s?BEGIN[A-Z ]+-+\\n([A-Za-z0-9+/\\r\\n]+={0,2})\\n-+\\s?END[A-Z ]+-+\\n?$",
            "type": "string",
            "description": "The APNs certificate in PEM format. Generate it at [developer.apple.com](https://developer.apple.com/account/resources/authkeys/add) with the 'Apple Push Notification service (APNs)' option selected.",
            "x-ui": {
              "tagName": "textarea"
            }
          },
          "key_id": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string"
          },
          "payload_version": {
            "enum": [
              "1",
              "2"
            ],
            "type": "string",
            "default": "2",
            "x-ui": {
              "type": "hidden"
            }
          },
          "team_id": {
            "maxLength": 10,
            "minLength": 10,
            "type": "string"
          }
        },
        "example": {
          "app_id": "com.example.myapp",
          "badge": "unread",
          "certificate": "-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgHnr4B2P+by++FGu/th0a44E8chJl5v5Vo4gq0YHw6e6gCgYIKoZIzj0DAQehRANCAARCg1MRibnfyeX5mx6+Rtfzzn7UhJP/oaqL4RzSmDuTsd3BTX33cuQ0gWHe20R2m1bLAkI1wrp+zbWOlAOAD7KX\n-----END PRIVATE KEY-----",
          "key_id": "ABCD1234EF",
          "team_id": "ABCD1234EF"
        }
      },
      "APNSConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/APNSConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "APNSToken": {
        "required": [
          "device_token"
        ],
        "type": "object",
        "properties": {
          "app_id": {
            "pattern": "^[a-zA-Z0-9]+(.[a-zA-Z0-9]+)*$",
            "type": "string"
          },
          "device_token": {
            "minLength": 64,
            "type": "string"
          },
          "installation_id": {
            "enum": [
              "development",
              "production"
            ],
            "type": "string"
          }
        },
        "example": {
          "device_token": "eH0fLhuiRj2Np7UQ-opXAm:APA91bGtC-wH4sgW1jWkMKIZf7FYkm_RTQb7Jid7DfSJnCgivGYoRzhLrGxpcIF6yPjmbzAr6CKF-6phZkBasFUUfZmfdgcqfA_ZlZdVk6pSnon3LGzMumCzEJE0zgWoo_RUmVUVJUAt",
          "installation_id": "development"
        }
      },
      "AWSSNSConfig": {
        "required": [
          "webhook_signing_secret"
        ],
        "type": "object",
        "properties": {
          "webhook_signing_secret": {
            "minLength": 1,
            "type": "string",
            "description": "The signing certificate from AWS SNS"
          }
        },
        "additionalProperties": false,
        "example": {
          "webhook_signing_secret": "whsec_e5cf4458caae49ae72d8f275deb9b63bdd41dd5c932c27c9346d428fb9e1d0a0"
        }
      },
      "AWSSNSConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/AWSSNSConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AccessToken": {
        "required": [
          "token",
          "token_id",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "token_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "example": {
          "created_at": "2021-01-01T00:00:00Z",
          "token": "eY.......",
          "token_id": "019b1b1e-7b1b-4b1b-8b1b-1b1b1b1b1b1b"
        }
      },
      "ArrayOfAPNSConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APNSConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "app_id": "com.example.myapp",
                "badge": "unread",
                "certificate": "-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgHnr4B2P+by++FGu/th0a44E8chJl5v5Vo4gq0YHw6e6gCgYIKoZIzj0DAQehRANCAARCg1MRibnfyeX5mx6+Rtfzzn7UhJP/oaqL4RzSmDuTsd3BTX33cuQ0gWHe20R2m1bLAkI1wrp+zbWOlAOAD7KX\n-----END PRIVATE KEY-----",
                "key_id": "ABCD1234EF",
                "team_id": "ABCD1234EF"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfAWSSNSConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AWSSNSConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "webhook_signing_secret": "whsec_e5cf4458caae49ae72d8f275deb9b63bdd41dd5c932c27c9346d428fb9e1d0a0"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfBroadcasts": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Broadcast"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "action_url": "https://example.com",
              "category": "example",
              "content": "Hello, World!",
              "custom_attributes": {},
              "id": "d1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b",
              "overrides": {},
              "recipients": [
                {
                  "custom_attributes": {
                    "plan": "enterprise",
                    "preferred_pronoun": "They",
                    "pricing_version": "v10"
                  },
                  "external_id": "83d987a-83fd034",
                  "first_name": "Person",
                  "last_name": "Doe",
                  "phone_numbers": [
                    "+1 5005550001"
                  ]
                }
              ],
              "title": "Hello, World!",
              "topic": "example"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfEvents": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "ArrayOfExpoConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpoConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "access_token": "expo_access_token"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfFCMConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FCMConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
                "auth_uri": "https://accounts.google.com/o/oauth2/auth",
                "client_email": "firebase-adminsdk-qwhtp@platform-development.iam.gserviceaccount.com",
                "client_id": "117893100789081023083",
                "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-qwhtp%40magicbell-development.iam.gserviceaccount.com",
                "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7/GBHM4AK4/8c\nZyvJfdzjBzfA48tV9T3N4hBCb4E66jIz+oztH9oSngEfIVO/L1dWjK1OlN0cqJ0f\nQaKq1eycSjmwfTR3HGNjQQyoGQ4BFBdyqT5rRDDZLPI2LoR0dtQXcBtiFpJF2t8e\niDmpl3d/ipuKMtBRzjYPqzP0qv3YkPmw2v5FqKK9EIaHRtOhd2R28F5FE+kF1dvB\nt7fEeVtKcQJcSwDUQ8HEshlWSx6azGd4jxf9jHRXWumXYfTA6NMA7EUTDJVus3vU\ny9MCv2KwZO/dzlQygY0BM9FHPSzZRIiHUx+DH6gYl2uWJatluHz58lj3r5mo/Ssc\nyP3TrqOnAgMBAAECggEAWAnDe0UCt9b8QGyPBK/V1VspgMQOE+UlOzkenUaEUreg\nqFg0TM8ofaSS6OXeR0DgGdALUCyGeyf6YcuG55QFWlKmvuF8QzY/05mA2G7XcKjc\nrF3Xtju61tLmYnqZnMOT46AkquTgPyfYa3+n5aVimRAsdOYESvOUvPTUgcbc2GGK\nC2h2MUCoRKuhzbGx847XJmINRE+xaht4hDMhzhMBVrgGGyQ3sIdbCxpbiQR6QH2H\npITrSnd4hlKRPREWS/D4FUKP/ucXdORP9SUi0R64NRZ3GvT1HvpVZ9fOXwIACdAG\n9fpIQbsmIgxhgZ5ZjuGz/nFi2KQ2Y8rEycQmnHd4QQKBgQD4LVFL93E4qwr7Eruj\nFjyxGYYi2PhVxvrpiSD6ziK3HUjAxat6OcoElJx7WEFWHmi7KRgehqcl40A8Coav\n9DGBwnSM2AYKgzOqMqzjK71TFOQsJdGEYThnhiL2FoQeptgskVS7J9MMBPTnyl7D\nYObINwGbg9auVp66rj5W+dymZwKBgQDB6VdpxJpU9hXBW+8nJESduhzpYiHoe1kN\nyka90dQDOe2b/R7bnF1Ggte6Ll1dMs3xLhN1Mm2XTcX2zmzM15C0E4+1t1LXXzAo\nO2P+riEmCIUc1i0yNMVgEKXiOBBYgKauE3fT88c4dw2JAT0QlifJ0h8kRPNhUaq9\nespjleNQwQKBgHUzwZ7knn2qmSb1M9PTHppseWJfoPexXrGHZyHK064ykDcpos+4\nFuWO4U+G4GQxPDiXMaLI6IsGBUHVnsHdyruC/9O7+S5hw7Zu9CLcdy6TQSZwPcAM\nwbxyJnSdMYvgM1roz2ELb6nPdXE5qwMN8i8/euzcmDgBBDkZLKuamE+lAoGBAKb7\nvd7DAvPvBkUAWi2mub/pqUQA0ZpVvhZ1/f0wWBZ/J/KQQqZzPI+f1Q3rJ1M+kMIE\nH5Vo257TxooGsQKlD2NDBRpCx//XZK0Al9eVM86Av8BZX4pAj0dujqsEBG9yOhbl\nhObsor4pJ2q3ulIyPAk7/L1K8xr3LMUGnIqtZJcBAoGAEQffqGbnaOG8Ue3++bLP\nN6XlAyt5UajAd1CycIHgDvbW0CkWoI70Bg7QNqMYJe6DareH4vRpdB3tw6zNP7qN\n0Bd04L8+zUYN+VqNJ70d7Xn+k2rY7STlgU3vwOzHFwu4wK2A7e+aAZ8AjC+Sr0ZM\nps+wuWO8MN5yQTBZvAEIfQs=\n-----END PRIVATE KEY-----\n",
                "private_key_id": "1935e74178f6ef0bbc23fb3538255f8281093bf2",
                "project_id": "platform-development",
                "token_uri": "https://oauth2.googleapis.com/token",
                "type": "service_account",
                "universe_domain": "googleapis.com"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfFetchTokensResponseTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FetchTokensResponseToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "created_at": "2021-01-01T00:00:00Z",
              "discarded_at": "2021-01-01T00:00:00Z",
              "expires_at": "2021-01-01T00:00:00Z",
              "id": "00000000-0000-0000-0000-000000000000",
              "name": "My Token"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfGithubConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GithubConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "webhook_signing_secret": "whsec_e5cf4458caae49ae72d8f275deb9b63bdd41dd5c932c27c9346d428fb9e1d0a0"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfInboxConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InboxConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "images": {
                  "emptyInboxUrl": ""
                },
                "locale": "de",
                "theme": {
                  "banner": {
                    "backgroundColor": "#F8F5FF",
                    "fontSize": "14px",
                    "textColor": "#3A424D"
                  },
                  "dialog": {
                    "accentColor": "#5225C1",
                    "backgroundColor": "#F5F5F5",
                    "textColor": "#313131"
                  },
                  "footer": {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": "16px",
                    "fontFamily": "inherit",
                    "fontSize": "15px",
                    "textColor": "#5225C1"
                  },
                  "header": {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": "16px",
                    "fontFamily": "inherit",
                    "fontSize": "15px",
                    "textColor": "#5225C1"
                  },
                  "icon": {
                    "borderColor": "#EDEDEF",
                    "width": "24px"
                  },
                  "unseenBadge": {
                    "backgroundColor": "#F80808"
                  }
                }
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfIntegrationObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "webhook_url": "https://example.com/webhook"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMailgunConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailgunConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "api_key": "mailgun_api_key",
                "domain": "mailgun_domain",
                "region": "us"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMetadataAPNSTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataAPNSToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "data": {
                "device_token": "eH0fLhuiRj2Np7UQ-opXAm:APA91bGtC-wH4sgW1jWkMKIZf7FYkm_RTQb7Jid7DfSJnCgivGYoRzhLrGxpcIF6yPjmbzAr6CKF-6phZkBasFUUfZmfdgcqfA_ZlZdVk6pSnon3LGzMumCzEJE0zgWoo_RUmVUVJUAt",
                "installation_id": "development"
              },
              "metadata": {
                "created_at": "2021-01-01T00:00:00Z",
                "discarded_at": "2021-01-01T00:00:00Z",
                "id": "123",
                "updated_at": "2021-01-01T00:00:00Z"
              }
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMetadataExpoTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataExpoToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "data": {
                "device_token": "expo-device-id"
              },
              "metadata": {
                "created_at": "2021-01-01T00:00:00Z",
                "discarded_at": "2021-01-01T00:00:00Z",
                "id": "123",
                "updated_at": "2021-01-01T00:00:00Z"
              }
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMetadataFCMTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataFCMToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "data": {
                "device_token": "eH0fLhuiRj2Np7UQ-opXAm:APA91bGtC-wH4sgW1jWkMKIZf7FYkm_RTQb7Jid7DfSJnCgivGYoRzhLrGxpcIF6yPjmbzAr6CKF-6phZkBasFUUfZmfdgcqfA_ZlZdVk6pSnon3LGzMumCzEJE0zgWoo_RUmVUVJUAt",
                "installation_id": "development"
              },
              "metadata": {
                "created_at": "2021-01-01T00:00:00Z",
                "discarded_at": "2021-01-01T00:00:00Z",
                "id": "123",
                "updated_at": "2021-01-01T00:00:00Z"
              }
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMetadataSlackTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataSlackToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "data": {
                "webhook": {
                  "url": "https://example.com/webhook"
                }
              },
              "metadata": {
                "created_at": "2021-01-01T00:00:00Z",
                "discarded_at": "2021-01-01T00:00:00Z",
                "id": "123",
                "updated_at": "2021-01-01T00:00:00Z"
              }
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMetadataTeamsTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataTeamsToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "data": {},
              "metadata": {
                "created_at": "2021-01-01T00:00:00Z",
                "discarded_at": "2021-01-01T00:00:00Z",
                "id": "123",
                "updated_at": "2021-01-01T00:00:00Z"
              }
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfMetadataWebPushTokens": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataWebPushToken"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "data": {
                "endpoint": "https://example.com/webhook",
                "keys": {
                  "auth": "<string>",
                  "p256dh": "<string>"
                }
              },
              "metadata": {
                "created_at": "2021-01-01T00:00:00Z",
                "discarded_at": "2021-01-01T00:00:00Z",
                "id": "123",
                "updated_at": "2021-01-01T00:00:00Z"
              }
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfPingConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PingConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "url": "https://example.com/webhook"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfSESConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SESConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "key_id": "MY_FAKE_AWS_ACCESS_KEY_ID",
                "region": "eu-west-1",
                "secret_key": "MY_FAKE_AWS_SECRET_KEY"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfSendgridConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SendgridConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "api_key": "SG.1234567890",
                "from": {
                  "email": "matt@magicbell.com",
                  "name": "Matt"
                },
                "reply_to": {
                  "email": "hana@magicbell.com",
                  "name": "Hana"
                }
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfSlackConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SlackConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "app_id": "12345678901",
                "client_id": "1.0",
                "client_secret": "12345678901234567890123456789012",
                "id": "myapp",
                "signing_secret": "12345678901234567890123456789012"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfStripeConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StripeConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "webhook_signing_secret": "whsec_e5cf4458caae49ae72d8f275deb9b63bdd41dd5c932c27c9346d428fb9e1d0a0"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfTemplatesConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplatesConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "apns": {
                  "app_id": "com.example.myapp",
                  "badge": "unread",
                  "certificate": "MIICXQIBAAKBgQC3J2",
                  "key_id": "ABCD1234EF",
                  "team_id": "ABCD1234EF"
                }
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfTwilioConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TwilioConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "account_sid": "ACXXXXXXXX",
                "api_key": "SKXXXXXXXX",
                "api_secret": "your_api_secret",
                "from": "+15017122661",
                "region": "us1"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "ArrayOfWebpushConfigObjects": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebpushConfigObject"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "example": {
          "data": [
            {
              "config": {
                "private_key": "<string>",
                "public_key": "<string>"
              },
              "id": "123",
              "name": "slack"
            }
          ],
          "links": {
            "first": "https://api.magicbell.com/v1/example",
            "next": "https://api.magicbell.com/v1/example?page[next]=abc",
            "prev": null
          }
        }
      },
      "Broadcast": {
        "required": [
          "title",
          "recipients"
        ],
        "type": "object",
        "properties": {
          "action_url": {
            "maxLength": 2048,
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9_\\.\\-/:]+$",
            "type": "string",
            "nullable": true
          },
          "content": {
            "maxLength": 10485760,
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the broadcast was created.",
            "format": "date-time",
            "readOnly": true
          },
          "custom_attributes": {
            "type": "object",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The unique id for this broadcast."
          },
          "overrides": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "object",
                    "properties": {
                      "action_url": {
                        "maxLength": 2048,
                        "type": "string",
                        "nullable": true
                      },
                      "content": {
                        "maxLength": 1048576,
                        "type": "string"
                      },
                      "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "in_app": {
                    "type": "object",
                    "properties": {
                      "action_url": {
                        "maxLength": 2048,
                        "type": "string",
                        "nullable": true
                      },
                      "content": {
                        "maxLength": 1048576,
                        "type": "string"
                      },
                      "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "mobile_push": {
                    "type": "object",
                    "properties": {
                      "action_url": {
                        "maxLength": 2048,
                        "type": "string",
                        "nullable": true
                      },
                      "content": {
                        "maxLength": 1048576,
                        "type": "string"
                      },
                      "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "slack": {
                    "type": "object",
                    "properties": {
                      "action_url": {
                        "maxLength": 2048,
                        "type": "string",
                        "nullable": true
                      },
                      "content": {
                        "maxLength": 1048576,
                        "type": "string"
                      },
                      "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "sms": {
                    "type": "object",
                    "properties": {
                      "action_url": {
                        "maxLength": 2048,
                        "type": "string",
                        "nullable": true
                      },
                      "content": {
                        "maxLength": 1048576,
                        "type": "string"
                      },
                      "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "web_push": {
                    "type": "object",
                    "properties": {
                      "action_url": {
                        "maxLength": 2048,
                        "type": "string",
                        "nullable": true
                      },
                      "content": {
                        "maxLength": 1048576,
                        "type": "string"
                      },
                      "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "providers": {
                "type": "object",
                "properties": {
                  "amazon_ses": {
                    "type": "object"
                  },
                  "android": {
                    "type": "object"
                  },
                  "ios": {
                    "type": "object"
                  },
                  "mailgun": {
                    "type": "object"
                  },
                  "postmark": {
                    "type": "object"
                  },
                  "sendgrid": {
                    "type": "object"
                  },
                  "slack": {
                    "type": "object"
                  }
                }
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "recipients": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/topic"
                },
                {
                  "$ref": "#/components/schemas/user"
                }
              ]
            }
          },
          "status": {
            "required": [
              "status",
              "summary",
              "errors"
            ],
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "nullable": true
              },
              "status": {
                "enum": [
                  "enqueued",
                  "processing",
                  "processed"
                ],
                "type": "string",
                "readOnly": true
              },
              "summary": {
                "required": [
                  "total",
                  "failures"
                ],
                "type": "object",
                "properties": {
                  "failures": {
                    "type": "integer",
                    "description": "The number of failures while processing the broadcast.",
                    "readOnly": true
                  },
                  "total": {
                    "type": "integer",
                    "description": "The number of recipients that the broadcast was sent to.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "topic": {
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9_\\.\\-/:]+$",
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "action_url": "https://example.com",
          "category": "example",
          "content": "Hello, World!",
          "custom_attributes": {},
          "id": "d1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b",
          "overrides": {},
          "recipients": [
            {
              "custom_attributes": {
                "plan": "enterprise",
                "preferred_pronoun": "They",
                "pricing_version": "v10"
              },
              "external_id": "83d987a-83fd034",
              "first_name": "Person",
              "last_name": "Doe",
              "phone_numbers": [
                "+1 5005550001"
              ]
            }
          ],
          "title": "Hello, World!",
          "topic": "example"
        }
      },
      "CategoryDeliveryConfig": {
        "required": [
          "channels",
          "category"
        ],
        "type": "object",
        "properties": {
          "category": {
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string"
          },
          "channels": {
            "type": "array",
            "items": {
              "required": [
                "channel"
              ],
              "type": "object",
              "properties": {
                "channel": {
                  "enum": [
                    "in_app",
                    "slack",
                    "web_push",
                    "mobile_push",
                    "teams",
                    "email"
                  ],
                  "type": "string"
                },
                "delay": {
                  "minimum": 0,
                  "type": "integer"
                },
                "disabled": {
                  "type": "boolean",
                  "default": false
                },
                "if": {
                  "type": "string"
                },
                "priority": {
                  "minimum": 0,
                  "type": "integer"
                }
              }
            }
          },
          "disabled": {
            "type": "boolean",
            "default": false
          }
        },
        "example": {
          "category": "test",
          "channels": [
            {
              "channel": "in_app",
              "open_for": 600
            },
            {
              "channel": "email",
              "if": "{{notification.unseen}} == false"
            }
          ],
          "disabled": false
        }
      },
      "CreateProjectTokenRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "expiry": {
            "minimum": 1,
            "type": "integer",
            "description": "The duration for which the token is valid (in seconds)"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the token."
          }
        },
        "example": {
          "expiry": 3600,
          "name": "My project token"
        }
      },
      "CreateUserTokenRequest": {
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "The user's email."
          },
          "expiry": {
            "minimum": 1,
            "type": "integer",
            "description": "The duration for which the token is valid (in seconds)"
          },
          "external_id": {
            "maxLength": 255,
            "type": "string",
            "description": "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the token."
          }
        },
        "example": {
          "email": "hana@magicbell.io",
          "expiry": 3600,
          "name": "Hana's token"
        }
      },
      "DiscardResult": {
        "type": "object",
        "properties": {
          "discarded_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "example": {
          "discarded_at": "2021-01-01T00:00:00Z",
          "id": "123"
        }
      },
      "DiscardTokenResponse": {
        "required": [
          "token_id",
          "discarded_at"
        ],
        "type": "object",
        "properties": {
          "discarded_at": {
            "type": "string",
            "format": "date-time"
          },
          "token_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Event": {
        "required": [
          "id",
          "type",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "context": {
            "type": "object",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "log": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ExpoConfig": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "minLength": 1,
            "type": "string"
          }
        },
        "example": {
          "access_token": "expo_access_token"
        }
      },
      "ExpoConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/ExpoConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ExpoToken": {
        "required": [
          "device_token"
        ],
        "type": "object",
        "properties": {
          "device_token": {
            "minLength": 1,
            "type": "string"
          }
        },
        "example": {
          "device_token": "expo-device-id"
        }
      },
      "FCMConfig": {
        "required": [
          "type",
          "project_id",
          "private_key_id",
          "private_key",
          "client_email",
          "client_id",
          "auth_uri",
          "token_uri",
          "auth_provider_x509_cert_url",
          "client_x509_cert_url",
          "universe_domain"
        ],
        "type": "object",
        "properties": {
          "auth_provider_x509_cert_url": {
            "type": "string"
          },
          "auth_uri": {
            "type": "string"
          },
          "client_email": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_x509_cert_url": {
            "type": "string"
          },
          "private_key": {
            "pattern": "^-+?\\s?BEGIN[A-Z ]+-+\\n([A-Za-z0-9+/\\r\\n]+={0,2})\\n-+\\s?END[A-Z ]+-+\\n?$",
            "type": "string",
            "x-ui": {
              "tagName": "textarea"
            }
          },
          "private_key_id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "token_uri": {
            "type": "string"
          },
          "type": {
            "enum": [
              "service_account"
            ],
            "type": "string"
          },
          "universe_domain": {
            "type": "string"
          }
        },
        "example": {
          "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
          "auth_uri": "https://accounts.google.com/o/oauth2/auth",
          "client_email": "firebase-adminsdk-qwhtp@platform-development.iam.gserviceaccount.com",
          "client_id": "117893100789081023083",
          "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-qwhtp%40magicbell-development.iam.gserviceaccount.com",
          "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7/GBHM4AK4/8c\nZyvJfdzjBzfA48tV9T3N4hBCb4E66jIz+oztH9oSngEfIVO/L1dWjK1OlN0cqJ0f\nQaKq1eycSjmwfTR3HGNjQQyoGQ4BFBdyqT5rRDDZLPI2LoR0dtQXcBtiFpJF2t8e\niDmpl3d/ipuKMtBRzjYPqzP0qv3YkPmw2v5FqKK9EIaHRtOhd2R28F5FE+kF1dvB\nt7fEeVtKcQJcSwDUQ8HEshlWSx6azGd4jxf9jHRXWumXYfTA6NMA7EUTDJVus3vU\ny9MCv2KwZO/dzlQygY0BM9FHPSzZRIiHUx+DH6gYl2uWJatluHz58lj3r5mo/Ssc\nyP3TrqOnAgMBAAECggEAWAnDe0UCt9b8QGyPBK/V1VspgMQOE+UlOzkenUaEUreg\nqFg0TM8ofaSS6OXeR0DgGdALUCyGeyf6YcuG55QFWlKmvuF8QzY/05mA2G7XcKjc\nrF3Xtju61tLmYnqZnMOT46AkquTgPyfYa3+n5aVimRAsdOYESvOUvPTUgcbc2GGK\nC2h2MUCoRKuhzbGx847XJmINRE+xaht4hDMhzhMBVrgGGyQ3sIdbCxpbiQR6QH2H\npITrSnd4hlKRPREWS/D4FUKP/ucXdORP9SUi0R64NRZ3GvT1HvpVZ9fOXwIACdAG\n9fpIQbsmIgxhgZ5ZjuGz/nFi2KQ2Y8rEycQmnHd4QQKBgQD4LVFL93E4qwr7Eruj\nFjyxGYYi2PhVxvrpiSD6ziK3HUjAxat6OcoElJx7WEFWHmi7KRgehqcl40A8Coav\n9DGBwnSM2AYKgzOqMqzjK71TFOQsJdGEYThnhiL2FoQeptgskVS7J9MMBPTnyl7D\nYObINwGbg9auVp66rj5W+dymZwKBgQDB6VdpxJpU9hXBW+8nJESduhzpYiHoe1kN\nyka90dQDOe2b/R7bnF1Ggte6Ll1dMs3xLhN1Mm2XTcX2zmzM15C0E4+1t1LXXzAo\nO2P+riEmCIUc1i0yNMVgEKXiOBBYgKauE3fT88c4dw2JAT0QlifJ0h8kRPNhUaq9\nespjleNQwQKBgHUzwZ7knn2qmSb1M9PTHppseWJfoPexXrGHZyHK064ykDcpos+4\nFuWO4U+G4GQxPDiXMaLI6IsGBUHVnsHdyruC/9O7+S5hw7Zu9CLcdy6TQSZwPcAM\nwbxyJnSdMYvgM1roz2ELb6nPdXE5qwMN8i8/euzcmDgBBDkZLKuamE+lAoGBAKb7\nvd7DAvPvBkUAWi2mub/pqUQA0ZpVvhZ1/f0wWBZ/J/KQQqZzPI+f1Q3rJ1M+kMIE\nH5Vo257TxooGsQKlD2NDBRpCx//XZK0Al9eVM86Av8BZX4pAj0dujqsEBG9yOhbl\nhObsor4pJ2q3ulIyPAk7/L1K8xr3LMUGnIqtZJcBAoGAEQffqGbnaOG8Ue3++bLP\nN6XlAyt5UajAd1CycIHgDvbW0CkWoI70Bg7QNqMYJe6DareH4vRpdB3tw6zNP7qN\n0Bd04L8+zUYN+VqNJ70d7Xn+k2rY7STlgU3vwOzHFwu4wK2A7e+aAZ8AjC+Sr0ZM\nps+wuWO8MN5yQTBZvAEIfQs=\n-----END PRIVATE KEY-----\n",
          "private_key_id": "1935e74178f6ef0bbc23fb3538255f8281093bf2",
          "project_id": "platform-development",
          "token_uri": "https://oauth2.googleapis.com/token",
          "type": "service_account",
          "universe_domain": "googleapis.com"
        }
      },
      "FCMConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/FCMConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "FCMToken": {
        "required": [
          "device_token"
        ],
        "type": "object",
        "properties": {
          "device_token": {
            "minLength": 64,
            "type": "string"
          },
          "installation_id": {
            "enum": [
              "development",
              "production"
            ],
            "type": "string"
          }
        },
        "example": {
          "device_token": "eH0fLhuiRj2Np7UQ-opXAm:APA91bGtC-wH4sgW1jWkMKIZf7FYkm_RTQb7Jid7DfSJnCgivGYoRzhLrGxpcIF6yPjmbzAr6CKF-6phZkBasFUUfZmfdgcqfA_ZlZdVk6pSnon3LGzMumCzEJE0zgWoo_RUmVUVJUAt",
          "installation_id": "development"
        }
      },
      "FetchTokensResponseToken": {
        "required": [
          "created_at"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "discarded_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GithubConfig": {
        "required": [
          "webhook_signing_secret"
        ],
        "type": "object",
        "properties": {
          "webhook_signing_secret": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The signing secret to verify incoming requests from Github"
          }
        },
        "additionalProperties": false,
        "example": {
          "webhook_signing_secret": "whsec_e5cf4458caae49ae72d8f275deb9b63bdd41dd5c932c27c9346d428fb9e1d0a0"
        }
      },
      "GithubConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/GithubConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "InboxConfig": {
        "required": [
          "theme",
          "locale",
          "images"
        ],
        "type": "object",
        "properties": {
          "images": {
            "minProperties": 1,
            "required": [
              "emptyInboxUrl"
            ],
            "type": "object",
            "properties": {
              "emptyInboxUrl": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "locale": {
            "minLength": 2,
            "type": "string",
            "nullable": true
          },
          "theme": {
            "minProperties": 1,
            "type": "object",
            "properties": {
              "banner": {
                "required": [
                  "fontSize",
                  "backgroundColor",
                  "textColor"
                ],
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "backgroundOpacity": {
                    "type": "number"
                  },
                  "fontSize": {
                    "type": "string"
                  },
                  "textColor": {
                    "type": "string"
                  }
                }
              },
              "dialog": {
                "required": [
                  "backgroundColor",
                  "textColor",
                  "accentColor"
                ],
                "type": "object",
                "properties": {
                  "accentColor": {
                    "type": "string"
                  },
                  "backgroundColor": {
                    "type": "string"
                  },
                  "textColor": {
                    "type": "string"
                  }
                }
              },
              "footer": {
                "required": [
                  "fontSize",
                  "backgroundColor",
                  "textColor",
                  "borderRadius"
                ],
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "borderRadius": {
                    "type": "string"
                  },
                  "fontSize": {
                    "type": "string"
                  },
                  "textColor": {
                    "type": "string"
                  }
                }
              },
              "header": {
                "required": [
                  "fontFamily",
                  "fontSize",
                  "backgroundColor",
                  "textColor",
                  "borderRadius"
                ],
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  },
                  "borderRadius": {
                    "type": "string"
                  },
                  "fontFamily": {
                    "type": "string"
                  },
                  "fontSize": {
                    "type": "string"
                  },
                  "textColor": {
                    "type": "string"
                  }
                }
              },
              "icon": {
                "required": [
                  "borderColor",
                  "width"
                ],
                "type": "object",
                "properties": {
                  "borderColor": {
                    "type": "string"
                  },
                  "width": {
                    "type": "string"
                  }
                }
              },
              "notification": {
                "required": [
                  "default",
                  "unseen",
                  "unread"
                ],
                "type": "object",
                "properties": {
                  "default": {
                    "required": [
                      "fontFamily",
                      "fontSize",
                      "textColor",
                      "borderRadius",
                      "backgroundColor",
                      "margin"
                    ],
                    "type": "object",
                    "properties": {
                      "backgroundColor": {
                        "type": "string"
                      },
                      "borderRadius": {
                        "type": "string"
                      },
                      "fontFamily": {
                        "type": "string"
                      },
                      "fontSize": {
                        "type": "string"
                      },
                      "hover": {
                        "required": [
                          "backgroundColor"
                        ],
                        "type": "object",
                        "properties": {
                          "backgroundColor": {
                            "type": "string"
                          }
                        }
                      },
                      "margin": {
                        "type": "string"
                      },
                      "state": {
                        "required": [
                          "color"
                        ],
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "string"
                          }
                        }
                      },
                      "textColor": {
                        "type": "string"
                      }
                    }
                  },
                  "unread": {
                    "required": [
                      "textColor",
                      "backgroundColor"
                    ],
                    "type": "object",
                    "properties": {
                      "backgroundColor": {
                        "type": "string"
                      },
                      "hover": {
                        "required": [
                          "backgroundColor"
                        ],
                        "type": "object",
                        "properties": {
                          "backgroundColor": {
                            "type": "string"
                          }
                        }
                      },
                      "state": {
                        "required": [
                          "color"
                        ],
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "string"
                          }
                        }
                      },
                      "textColor": {
                        "type": "string"
                      }
                    }
                  },
                  "unseen": {
                    "required": [
                      "textColor",
                      "backgroundColor"
                    ],
                    "type": "object",
                    "properties": {
                      "backgroundColor": {
                        "type": "string"
                      },
                      "hover": {
                        "required": [
                          "backgroundColor"
                        ],
                        "type": "object",
                        "properties": {
                          "backgroundColor": {
                            "type": "string"
                          }
                        }
                      },
                      "state": {
                        "required": [
                          "color"
                        ],
                        "type": "object",
                        "properties": {
                          "color": {
                            "type": "string"
                          }
                        }
                      },
                      "textColor": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "unseenBadge": {
                "required": [
                  "backgroundColor"
                ],
                "type": "object",
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  }
                }
              }
            },
            "nullable": true
          }
        },
        "example": {
          "images": {
            "emptyInboxUrl": ""
          },
          "locale": "de",
          "theme": {
            "banner": {
              "backgroundColor": "#F8F5FF",
              "fontSize": "14px",
              "textColor": "#3A424D"
            },
            "dialog": {
              "accentColor": "#5225C1",
              "backgroundColor": "#F5F5F5",
              "textColor": "#313131"
            },
            "footer": {
              "backgroundColor": "#FFFFFF",
              "borderRadius": "16px",
              "fontFamily": "inherit",
              "fontSize": "15px",
              "textColor": "#5225C1"
            },
            "header": {
              "backgroundColor": "#FFFFFF",
              "borderRadius": "16px",
              "fontFamily": "inherit",
              "fontSize": "15px",
              "textColor": "#5225C1"
            },
            "icon": {
              "borderColor": "#EDEDEF",
              "width": "24px"
            },
            "unseenBadge": {
              "backgroundColor": "#F80808"
            }
          }
        }
      },
      "InboxConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/InboxConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Integration": {
        "type": "object"
      },
      "IntegrationObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/Integration"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Links": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "next": {
            "type": "string",
            "nullable": true
          },
          "prev": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MailgunConfig": {
        "required": [
          "api_key",
          "region",
          "domain"
        ],
        "type": "object",
        "properties": {
          "api_key": {
            "minLength": 1,
            "type": "string"
          },
          "domain": {
            "minLength": 1,
            "type": "string"
          },
          "region": {
            "enum": [
              "us",
              "eu"
            ],
            "type": "string"
          }
        },
        "example": {
          "api_key": "mailgun_api_key",
          "domain": "mailgun_domain",
          "region": "us"
        }
      },
      "MailgunConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/MailgunConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MetadataAPNSToken": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/APNSToken"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        },
        "example": {
          "data": {
            "device_token": "eH0fLhuiRj2Np7UQ-opXAm:APA91bGtC-wH4sgW1jWkMKIZf7FYkm_RTQb7Jid7DfSJnCgivGYoRzhLrGxpcIF6yPjmbzAr6CKF-6phZkBasFUUfZmfdgcqfA_ZlZdVk6pSnon3LGzMumCzEJE0zgWoo_RUmVUVJUAt",
            "installation_id": "development"
          },
          "metadata": {
            "created_at": "2021-01-01T00:00:00Z",
            "discarded_at": "2021-01-01T00:00:00Z",
            "id": "123",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        }
      },
      "MetadataExpoToken": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExpoToken"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        },
        "example": {
          "data": {
            "device_token": "expo-device-id"
          },
          "metadata": {
            "created_at": "2021-01-01T00:00:00Z",
            "discarded_at": "2021-01-01T00:00:00Z",
            "id": "123",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        }
      },
      "MetadataFCMToken": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FCMToken"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        },
        "example": {
          "data": {
            "device_token": "eH0fLhuiRj2Np7UQ-opXAm:APA91bGtC-wH4sgW1jWkMKIZf7FYkm_RTQb7Jid7DfSJnCgivGYoRzhLrGxpcIF6yPjmbzAr6CKF-6phZkBasFUUfZmfdgcqfA_ZlZdVk6pSnon3LGzMumCzEJE0zgWoo_RUmVUVJUAt",
            "installation_id": "development"
          },
          "metadata": {
            "created_at": "2021-01-01T00:00:00Z",
            "discarded_at": "2021-01-01T00:00:00Z",
            "id": "123",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        }
      },
      "MetadataSlackToken": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SlackToken"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        },
        "example": {
          "data": {
            "webhook": {
              "url": "https://example.com/webhook"
            }
          },
          "metadata": {
            "created_at": "2021-01-01T00:00:00Z",
            "discarded_at": "2021-01-01T00:00:00Z",
            "id": "123",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        }
      },
      "MetadataTeamsToken": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TeamsToken"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        },
        "example": {
          "data": {},
          "metadata": {
            "created_at": "2021-01-01T00:00:00Z",
            "discarded_at": "2021-01-01T00:00:00Z",
            "id": "123",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        }
      },
      "MetadataWebPushToken": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebPushToken"
          },
          "metadata": {
            "$ref": "#/components/schemas/TokenMetadata"
          }
        },
        "example": {
          "data": {
            "endpoint": "https://example.com/webhook",
            "keys": {
              "auth": "<string>",
              "p256dh": "<string>"
            }
          },
          "metadata": {
            "created_at": "2021-01-01T00:00:00Z",
            "discarded_at": "2021-01-01T00:00:00Z",
            "id": "123",
            "updated_at": "2021-01-01T00:00:00Z"
          }
        }
      },
      "PingConfig": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "URL to ping",
            "format": "uri"
          }
        },
        "example": {
          "url": "https://example.com/webhook"
        }
      },
      "PingConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/PingConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProjectDeliveryConfig": {
        "required": [
          "channels"
        ],
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "required": [
                "channel"
              ],
              "type": "object",
              "properties": {
                "channel": {
                  "enum": [
                    "in_app",
                    "slack",
                    "web_push",
                    "mobile_push",
                    "teams",
                    "email",
                    "sms"
                  ],
                  "type": "string"
                },
                "delay": {
                  "minimum": 0,
                  "type": "integer",
                  "description": "Delay (in seconds) since the last step, before the message is sent to the channel"
                },
                "disabled": {
                  "type": "boolean",
                  "default": false
                },
                "if": {
                  "type": "string"
                },
                "priority": {
                  "minimum": 0,
                  "type": "integer"
                }
              }
            }
          }
        },
        "example": {
          "channels": [
            {
              "channel": "in_app"
            },
            {
              "channel": "email",
              "delay": 600,
              "if": "{{notification.unseen}} == false"
            }
          ]
        }
      },
      "SESConfig": {
        "required": [
          "key_id",
          "secret_key",
          "region"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "minLength": 1,
            "type": "string",
            "description": "HTTP endpoint to send requests to (testing only)",
            "format": "uri"
          },
          "from": {
            "required": [
              "email"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "The email address to send from",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "The name to send from",
                "nullable": true
              }
            }
          },
          "key_id": {
            "minLength": 1,
            "type": "string",
            "description": "AWS Access Key ID"
          },
          "region": {
            "minLength": 1,
            "type": "string",
            "description": "AWS Region"
          },
          "secret_key": {
            "minLength": 1,
            "type": "string",
            "description": "AWS Secret Key"
          }
        },
        "example": {
          "key_id": "MY_FAKE_AWS_ACCESS_KEY_ID",
          "region": "eu-west-1",
          "secret_key": "MY_FAKE_AWS_SECRET_KEY"
        }
      },
      "SESConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/SESConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SendgridConfig": {
        "required": [
          "api_key"
        ],
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string",
            "description": "The API key for Sendgrid"
          },
          "from": {
            "required": [
              "email"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "The email address to send from",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "The name to send from",
                "nullable": true
              }
            }
          },
          "reply_to": {
            "required": [
              "email"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "The email address to reply to",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "The name to reply to",
                "nullable": true
              }
            }
          }
        },
        "example": {
          "api_key": "SG.1234567890",
          "from": {
            "email": "matt@magicbell.com",
            "name": "Matt"
          },
          "reply_to": {
            "email": "hana@magicbell.com",
            "name": "Hana"
          }
        }
      },
      "SendgridConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/SendgridConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SlackConfig": {
        "required": [
          "app_id",
          "client_id",
          "client_secret",
          "signing_secret"
        ],
        "type": "object",
        "properties": {
          "app_id": {
            "pattern": "^[0-9A-Z]+$",
            "type": "string"
          },
          "client_id": {
            "pattern": "^[0-9]+\\.[0-9]+$",
            "type": "string"
          },
          "client_secret": {
            "maxLength": 32,
            "minLength": 32,
            "type": "string"
          },
          "signing_secret": {
            "maxLength": 32,
            "minLength": 32,
            "type": "string"
          }
        },
        "example": {
          "app_id": "12345678901",
          "client_id": "1.0",
          "client_secret": "12345678901234567890123456789012",
          "id": "myapp",
          "signing_secret": "12345678901234567890123456789012"
        }
      },
      "SlackConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/SlackConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SlackToken": {
        "minProperties": 1,
        "type": "object",
        "properties": {
          "oauth": {
            "required": [
              "channel_id",
              "installation_id"
            ],
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "installation_id": {
                "type": "string"
              },
              "scope": {
                "type": "string"
              }
            }
          },
          "webhook": {
            "required": [
              "url"
            ],
            "type": "object",
            "properties": {
              "url": {
                "minLength": 1,
                "type": "string",
                "format": "uri"
              }
            }
          }
        },
        "additionalProperties": false,
        "example": {
          "webhook": {
            "url": "https://example.com/webhook"
          }
        }
      },
      "StripeConfig": {
        "required": [
          "webhook_signing_secret"
        ],
        "type": "object",
        "properties": {
          "webhook_signing_secret": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The signing secret to verify incoming requests from Stripe"
          }
        },
        "additionalProperties": false,
        "example": {
          "webhook_signing_secret": "whsec_e5cf4458caae49ae72d8f275deb9b63bdd41dd5c932c27c9346d428fb9e1d0a0"
        }
      },
      "StripeConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/StripeConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TeamsToken": {
        "type": "object",
        "properties": {
          "webhook": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            }
          }
        },
        "example": {}
      },
      "TemplatesConfig": {
        "type": "object",
        "example": {
          "apns": {
            "app_id": "com.example.myapp",
            "badge": "unread",
            "certificate": "MIICXQIBAAKBgQC3J2",
            "key_id": "ABCD1234EF",
            "team_id": "ABCD1234EF"
          }
        }
      },
      "TemplatesConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TemplatesConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TokenMetadata": {
        "required": [
          "id",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "discarded_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TwilioConfig": {
        "required": [
          "account_sid",
          "api_key",
          "api_secret",
          "from"
        ],
        "type": "object",
        "properties": {
          "account_sid": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The SID for your Twilio account"
          },
          "api_key": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The API key for Twilio"
          },
          "api_secret": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The API Secret for Twilio"
          },
          "from": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^\\+[0-9]{1,14}$",
            "type": "string",
            "description": "The phone number to send from, in E.164 format"
          },
          "region": {
            "enum": [
              "us1",
              "ie1",
              "au1"
            ],
            "type": "string",
            "description": "The region to use for Twilio, defaults to 'us1'"
          }
        },
        "example": {
          "account_sid": "ACXXXXXXXX",
          "api_key": "SKXXXXXXXX",
          "api_secret": "your_api_secret",
          "from": "+15017122661",
          "region": "us1"
        }
      },
      "TwilioConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TwilioConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "WebPushToken": {
        "required": [
          "endpoint",
          "keys"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "keys": {
            "required": [
              "p256dh",
              "auth"
            ],
            "type": "object",
            "properties": {
              "auth": {
                "type": "string"
              },
              "p256dh": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "endpoint": "https://example.com/webhook",
          "keys": {
            "auth": "<string>",
            "p256dh": "<string>"
          }
        }
      },
      "WebpushConfig": {
        "required": [
          "public_key",
          "private_key"
        ],
        "type": "object",
        "properties": {
          "private_key": {
            "maxLength": 128,
            "minLength": 8,
            "type": "string"
          },
          "public_key": {
            "maxLength": 128,
            "minLength": 8,
            "type": "string"
          }
        },
        "example": {
          "private_key": "<string>",
          "public_key": "<string>"
        }
      },
      "WebpushConfigObject": {
        "required": [
          "name",
          "id",
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/WebpushConfig"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "topic": {
        "required": [
          "topic"
        ],
        "type": "object",
        "properties": {
          "topic": {
            "required": [
              "subscribers"
            ],
            "type": "object",
            "properties": {
              "subscribers": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "user": {
        "type": "object",
        "allOf": [
          {
            "anyOf": [
              {
                "required": [
                  "email"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "external_id": {
                    "pattern": "\\s*",
                    "type": "string"
                  }
                }
              },
              {
                "required": [
                  "email"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "external_id": {
                    "pattern": "^[^\\s]+",
                    "type": "string"
                  }
                }
              },
              {
                "required": [
                  "external_id"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "external_id": {
                    "pattern": "^[^\\s]+",
                    "type": "string"
                  }
                }
              },
              {
                "required": [
                  "external_id"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "\\s+"
                  },
                  "external_id": {
                    "minLength": 1,
                    "pattern": "^[^\\s]+",
                    "type": "string"
                  }
                }
              }
            ]
          },
          {
            "minProperties": 1,
            "type": "object",
            "properties": {
              "custom_attributes": {
                "type": "object"
              },
              "email": {
                "maxLength": 255,
                "type": "string"
              },
              "external_id": {
                "maxLength": 255,
                "type": "string"
              },
              "first_name": {
                "maxLength": 255,
                "type": "string"
              },
              "last_name": {
                "maxLength": 255,
                "type": "string"
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "pattern": "^\\+\\d{1,3}\\s?\\d{1,14}$",
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  }
}